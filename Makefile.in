# This file simplifies the building process of a SNES ROM using this API.
#
# The following VARIABALES determine the behaviour of the build process:
#    * ROM_NAME      - the name of the final rom (without extension)
#    * API_DIR       - the directory of the snesdev-common repo
#    * CONFIG        - the memory config to use
#    * SOURCE_DIR    - the location of the source
#    * RESOURCES_DIR - (optional) the location of the resources, can contain its own makefile
#    * TABLES_DIR    - (optional) the location of the pre-calculated tables, can contain its own makefile

# Disable Builtin rules
.SUFFIXES:
.DELETE_ON_ERROR:
MAKEFLAGS += --no-builtin-rules


API_ROUTINE_DIR = $(API_DIR)/routines

SOURCES     = $(wildcard $(SOURCE_DIR)/*.s $(SOURCE_DIR)/*/*.s $(SOURCE_DIR)/*/*.s)
HEADERS     = $(wildcard $(SOURCE_DIR)/*.h $(SOURCE_DIR)/*/*.h)
INCLUDES    = $(wildcard $(SOURCE_DIR)/*.inc $(SOURCE_DIR)/*/*.inc)
INCLUDES   += $(wildcard $(SOURCE_DIR)/*.asm $(SOURCE_DIR)/*/*.asm)

BINARY      = bin/$(ROM_NAME).sfc
OBJECTS     = $(patsubst $(SOURCE_DIR)/%.s,obj/%.o,$(SOURCES))
API_HEADERS = $(wildcard $(patsubst %,$(API_ROUTINE_DIR)/%.h,$(API_MODULES)))
API_OBJECTS = $(patsubst %,obj/api/%.o,$(API_MODULES))
CONFIG_FILE = $(API_DIR)/config/$(CONFIG).cfg
OBJECT_DIRS = $(sort $(dir $(API_OBJECTS) $(OBJECTS)))

ifneq ($(words $(ROM_NAME)), 1)
  $(error Cannot have space in ROM_NAME)
endif


.PHONY: all
all: dirs resources tables $(BINARY)

$(BINARY): $(OBJECTS) $(API_OBJECTS)
	ld65 -vm -m $(@:.sfc=.memlog) -C $(CONFIG_FILE) -o $@ $^
	cd bin/ && ucon64 --snes --nhd --chk $(notdir $@)


$(OBJECTS): $(HEADERS) $(INCLUDES)
$(OBJECTS) $(API_OBJECTS): $(CONFIG_FILE) $(API_HEADERS) $(API_DIR)/Makefile.in Makefile

ifneq (,$(wildcard config.h))
  $(OBJECTS) $(API_OBJECTS): config.h
endif



obj/%.o: $(SOURCE_DIR)/%.s
	ca65 -I . -I $(API_DIR) -o $@ $<

obj/api/%.o: $(API_ROUTINE_DIR)/%.s
	ca65 -I . -I $(API_DIR) -o $@ $<

obj/api/math.o: $(wildcard $(API_ROUTINE_DIR)/math/*)


.PHONY: dirs
dirs: bin/ $(OBJECT_DIRS)

bin/ $(OBJECT_DIRS):
	mkdir $@

.PHONY: resources
resources:
ifdef RESOURCES_DIR
  ifneq (,$(wildcard $(RESOURCES_DIR)/Makefile))
		$(MAKE) -C $(RESOURCES_DIR)
  else
    # ::ANNOY tried to put common rules in here, but Makefile took 1min 23sec to process ::
		$(MAKE) -C $(RESOURCES_DIR) -f "$(realpath $(API_DIR)/makefiles/resources.makefile)"
  endif

  RESOURCES   = $(wildcard $(RESOURCES_DIR)/* $(RESOURCES_DIR)/*/* $(RESOURCES_DIR)/*/*/*)
  SNESGSS_RES = $(wildcard $(RESOURCES_DIR)/snesgss/*/*)

  ifneq (,$(wildcard $(SOURCE_DIR)/resources.s))
    obj/resources.o: $(RESOURCES)
  else
    $(OBJECTS): $(RESOURCES)
  endif

  $(OBJECTS): $(SNESGSS_RES)
endif


.PHONY: tables
tables:
ifdef TABLES_DIR
  ifneq (,$(wildcard $(TABLES_DIR)/Makefile))
		$(MAKE) -C $(TABLES_DIR)
  else
    # ::ANNOY tried to put rules in here, but Makefile took 12 seconds to process ::
		$(MAKE) -C $(TABLES_DIR) -f "$(realpath $(API_DIR)/makefiles/tables.makefile)"
  endif

  $(OBJECTS): $(wildcard $(RESOURCES_DIR)/* $(RESOURCES_DIR)/*/* $(RESOURCES_DIR)/*/*/*)
endif


.PHONY: clean
clean::
ifdef TABLES_DIR
  ifneq (,$(wildcard $(TABLES_DIR)/Makefile))
		$(MAKE) -C $(TABLES_DIR) clean
  else
		$(MAKE) -C $(TABLES_DIR) -f "$(realpath $(API_DIR)/makefiles/tables.makefile)" clean
  endif
endif
ifdef RESOURCES_DIR
  ifneq (,$(wildcard $(RESOURCES_DIR)/Makefile))
		$(MAKE) -C $(RESOURCES_DIR) clean
  else
		$(MAKE) -C $(RESOURCES_DIR) -f "$(realpath $(API_DIR)/makefiles/resources.makefile)" clean
  endif
endif
	$(RM) bin/$(BINARY) $(OBJECTS) $(API_OBJECTS)


