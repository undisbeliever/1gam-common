## ca65 linker config for a 1MBit LOROM Cart
##
## Based off blargg's lowrom128.inc
##
## Physical areas of memory
MEMORY {
    ZEROPAGE:   start =       0, size =   $100;
    SHADOW:     start =    $100, size =  $1E80;
    STACK:      start =   $1F80, size =  $0080, define = yes;

    ROM:        start = $808000, size =  $8000, fill = yes;
    BANK1:      start = $818000, size =  $8000, fill = yes;
    BANK2:      start = $828000, size =  $8000, fill = yes;
    BANK3:      start = $838000, size =  $8000, fill = yes;

    WRAM7E:     start = $7E2000, size =  $E000;
    WRAM7F:     start = $7F0000, size = $10000;

}

# Logical areas code/data can be put into.
SEGMENTS {
    # Shadow RAM
    ZEROPAGE:   load = ZEROPAGE,    type = zp;
    SHADOW:     load = SHADOW,      type = bss, align = $100, optional = yes;

    # Work RAM
    WRAM7E:     load = WRAM7E,      type = bss, start = $7E2000, optional = yes;
    WRAM7F:     load = WRAM7F,      type = bss, start = $7F0000, optional = yes;

    # Bank 0
    COPYRIGHT:  load = ROM,         start = $808000;
    CODE:       load = ROM,         start = $808080;
    RODATA:     load = ROM;
    ROMHEADER:  load = ROM,         start = $80FFB0;
    VECTORS:    load = ROM,         start = $80FFE0;

    # The extra three banks
    BANK1:      load = BANK1,       start = $818000, optional = yes;
    BANK2:      load = BANK2,       start = $828000, optional = yes;
    BANK3:      load = BANK3,       start = $838000, optional = yes;
}


SYMBOLS {
    # Define the highest byte of the stack
    __STACK_TOP:                type = export, value = $1FFF;

    __ROMHEADER_EXPANSION_RAM:  type = export, value = $00; # No Expansion RAM
    __ROMHEADER_MAP_MODE:       type = export, value = $30; # LoROM, Fast ROM
    __ROMHEADER_CART_TYPE:      type = export, value = $00; # ROM only, no co-processor
    __ROMHEADER_ROM_SIZE:	type = export, value = $07; # 1Mbit ROM
    __ROMHEADER_SRAM_SIZE:      type = export, value = $00; # No SRAM
}

